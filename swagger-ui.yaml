swagger: '2.0'
info:
  description: This the API for the CPEL application
  version: 1.0.0
  title: API for CPEL Application

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

# tags are used for organizing operations
tags:
  - name: Professor
    description: Professors
  - name: Student
    description: Student operations
  - name: Group
    description: Group of students
  - name: Module

paths:
  /professor:
    get:
      tags:
        - Professor
      summary: searches professors
      operationId: searchProfessors
      description: |
        By passing in the appropriate options, you can search for
        available inventory in the system
      produces:
        - application/json
      responses:
        200:
          description: Search all existing professors
          schema:
            type: array
            items:
              $ref: '#/definitions/Professor'
        400:
          description: bad input parameter
    post:
      tags:
        - Professor
      summary: adds a new professor
      operationId: addProfessor
      description: Adds a professor to the system
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Professor
          description: New professor to add
          schema:
            $ref: '#/definitions/Professor'
      responses:
        201:
          description: professor created
        400:
          description: invalid input, object invalid
        409:
          description: an existing professor already exists
  /professor/{id}:
    get:
      tags:
        - Professor
      summary: searches one professor by its id
      operationId: searchProfessor
      description: |
        By passing in the appropriate options, you can search for
        available inventory in the system
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: pass an optional search string for looking up inventory
          required: true
          type: string
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Professor'
        400:
          description: bad input parameter
definitions:
  Correction:
    type: object
    required:
      - idCorrection
      - idExercise
      - contenu
    properties:
      idCorrection:
        type: string
        format: uuid
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
      idExercise:
        type: string
        example: 12
      contenu:
        type: string
        example: Pour cet exercice, vous allez devoir..
  Exercise:
    type: object
    required:
      - idExercise
      - name
      - idModule
      - wording
      - syntaxCriteria
      - logicCriteria
    properties:
      idExercise:
        type: string
        example: 12
      name:
        type: string
        example: Les boucles en Python
      idModule:
        type: string
        example: 3
      wording:
        type: string
        example: Dans cet exercice, vous devrez parcourir un tableau avec une boucle while
      syntaxCriteria:
        type: boolean
        example: false
      logicCriteria:
        type: boolean
        example: true
  Group:
    type: object
    required:
      - idGroup
      - name
      - nbOfStudents
    properties:
      idGroup:
        type: string
        example: 2
      name:
        type: string
        example: M2MIAA
      nbOfStudents:
        type: integer
        example: 30
  Professor:
    type: object
    required:
      - idProf
      - lastname
      - firstname
      - email
      - password
      - idModule
    properties:
      id:
        type: string
        format: uuid
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
      lastname:
        type: string
        example: Doe
      firtname:
        type: string
        example: Joe
      email:
        type: string
        example: joe.doe@domain.com
      password:
        type: string
        example: hashPassword
      idModule:
        type: integer
        format: int32
        example: 2


# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /CPEL_Project/CPEL_PROJECT/1.0.0
schemes:
  - https
